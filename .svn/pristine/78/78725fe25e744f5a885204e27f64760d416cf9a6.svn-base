import System.Environment
import Data.Char

-- t=tamanho do mapa

encode :: [String] -> String
encode l = unlines l


comprimeL1 :: String -> String
comprimeL1 l = head l : show (length l)

comprimeL2 :: String -> String
comprimeL2 l = take ((length l)-6) (drop 3 l)

comprimeL3 :: String -> String
comprimeL3 l = take ((length l)-4) (drop 2 l)

comprimeEven :: String -> String
comprimeEven l = head (take ((length l)-2) (drop 1 l)):show (length (take ((length l)-2) (drop 1 l))) 

comprimeOdd :: String -> String
comprimeOdd (h:t) = head (filter (\h->h=='?') (h:t)):show (length (filter (\h->h=='?') (h:t)))


decode :: String -> [String]
decode l = lines l





           
main :: IO ()
main = do a <- getArgs
          let p = a !! 0
          w <- getContents
          if length a == 1 && length p == 2 && (p=="-e" || p=="-d")
             then if p=="-e" then putStr $ encode $ lines w
                             else putStr $ unlines $ decode w
             else putStrLn "Parâmetros inválidos"
